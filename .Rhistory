## 6.1: Use mutate to change lifeExp to be in months
gapminder %>%
mutate(lifeExp = 12 * lifeExp)
## 6.2: Use mutate to create a new column called lifeExpMonths
gapminder %>%
mutate(lifeExpMonths = 12 * lifeExp)
## 6.3: Filter, mutate, and arrange the gapminder dataset
## Retrieve the life expectancy in months for the year 2007.
## Store the result in a new column called lifeExpMonths
## Sort the result in descending order
gapminder %>%
filter(year == 2007) %>%
mutate(lifeExpMonths = 12 * lifeExp) %>%
arrange(desc(lifeExpMonths))
###########################################################
## Task Seven: The Summarize Verb
## In this task, you will learn how to use the summarize verb
## to summarize a column into one single value
###########################################################
## 7.1: Summarize to find the median life expectancy
gapminder %>%
summarise(medianLifeExp = median(lifeExp))
## 7.2: Filter for 1962 then summarize the median life expectancy
gapminder %>%
filter(year == 1962) %>%
summarise(medianLifeExp = median(lifeExp))
## 7.3: Filter for 1962 then summarize the median life expectancy
## and the maximum GDP per capita
gapminder %>%
filter(year == 1962) %>%
summarise(medianLifeExp = median(lifeExp),maxGdpCap = max(gdpPercap))
###########################################################
## Task Eight: The group_by verb
## In this task, you will learn how to use the group_by verb
## to group by column(s) in the dataset
###########################################################
## 8.1: Find median life expectancy and maximum GDP per capita in each year
gapminder %>%
group_by(year) %>%
summarise(medianLifeExp = median(lifeExp),
maxFdpCap = max(gdpPercap))
## 8.2: Find median life expectancy and maximum GDP per
## capita in each continent in 1962
gapminder %>%
filter(year == 1962) %>%
group_by(continent) %>%
summarise(medianLifeExp = median(lifeExp),
maxFdpCap = max(gdpPercap)) %>%
arrange(desc(medianLifeExp))
## 8.3: Find median life expectancy and maximum GDP per capita
## in each continent/year combination
data <- gapminder %>%
group_by(year,continent) %>%
summarise(medianLifeExp = median(lifeExp),
maxFdpCap = max(gdpPercap))
View(data)
install.packages("gapminder")
###########################################################
###########################################################
## Data Manipulation with dplyr in R
###########################################################
###########################################################
## Task One: Getting Started & About tidyverse
## In this task, you will understand what the tidyverse package
## does and install the required packages for this project
###########################################################
## 1.1: Install the dplyr package
install.packages('dplyr')
## 1.2: Install the gapminder package from the packages tab
###########################################################
## Task Two: Import packages & dataset
## In this task, we will load the required package and dataset
## into the R workspace. Also, we will explore the dataset
###########################################################
## 2.1: Load the dplyr package
library('dplyr')
## 2.2: Load the gapminder package
library(gapminder)
## 2.3: Look at the gapminder dataset
gapminder
## 2.4: Check the structure of the dataset
glimpse(gapminder)
## This will give the same result
str(gapminder)
###########################################################
## Task Three: The Select Verb
## In this task, you will learn how to use the select verb
## to retrieve columns of the dataset
###########################################################
## 3.1: Select the country and continent columns
gapminder %>%
select(country,continent)
## 3.2: Store the result of 3.1 in a variable called country_con
country_con <- gapminder %>%
select(country,continent)
## 3.3: Print out the variable
country_con
###########################################################
## Task Four: The Filter Verb
## In this task, you will learn how to use the filter verb
## to retrieve rows of columns of the dataset
###########################################################
## 4.1: Filter the gapminder dataset for the year 1962
gapminder %>%
filter(year == 1962)
## 4.2: Filter for China in 2002
gapminder %>%
filter(year == 2002, country == "China" )
###########################################################
## Task Five: The Arrange Verb
## In this task, you will learn how to use the arrange verb
## to sort the result of a column
###########################################################
## 5.1: Sort in ascending order of lifeExp
gapminder %>%
arrange(lifeExp)
## 5.2: Sort in descending order of lifeExp and
## select the top fifteen
gapminder %>%
arrange(desc(lifeExp)) %>%
slice(1:15)
#% 5.3: Filter for the year 1962,
## then arrange in descending order of population
gapminder %>%
filter(year == 1962) %>%
arrange(desc(pop))
###########################################################
## Task Six: The Mutate Verb
## In this task, you will learn how to use the mutate verb
## to change or add columns in the dataset
###########################################################
## 6.1: Use mutate to change lifeExp to be in months
gapminder %>%
mutate(lifeExp = 12 * lifeExp)
## 6.2: Use mutate to create a new column called lifeExpMonths
gapminder %>%
mutate(lifeExpMonths = 12 * lifeExp)
## 6.3: Filter, mutate, and arrange the gapminder dataset
## Retrieve the life expectancy in months for the year 2007.
## Store the result in a new column called lifeExpMonths
## Sort the result in descending order
gapminder %>%
filter(year == 2007) %>%
mutate(lifeExpMonths = 12 * lifeExp) %>%
arrange(desc(lifeExpMonths))
###########################################################
## Task Seven: The Summarize Verb
## In this task, you will learn how to use the summarize verb
## to summarize a column into one single value
###########################################################
## 7.1: Summarize to find the median life expectancy
gapminder %>%
summarise(medianLifeExp = median(lifeExp))
## 7.2: Filter for 1962 then summarize the median life expectancy
gapminder %>%
filter(year == 1962) %>%
summarise(medianLifeExp = median(lifeExp))
## 7.3: Filter for 1962 then summarize the median life expectancy
## and the maximum GDP per capita
gapminder %>%
filter(year == 1962) %>%
summarise(medianLifeExp = median(lifeExp),maxGdpCap = max(gdpPercap))
###########################################################
## Task Eight: The group_by verb
## In this task, you will learn how to use the group_by verb
## to group by column(s) in the dataset
###########################################################
## 8.1: Find median life expectancy and maximum GDP per capita in each year
gapminder %>%
group_by(year) %>%
summarise(medianLifeExp = median(lifeExp),
maxFdpCap = max(gdpPercap))
## 8.2: Find median life expectancy and maximum GDP per
## capita in each continent in 1962
gapminder %>%
filter(year == 1962) %>%
group_by(continent) %>%
summarise(medianLifeExp = median(lifeExp),
maxFdpCap = max(gdpPercap)) %>%
arrange(desc(medianLifeExp))
## 8.3: Find median life expectancy and maximum GDP per capita
## in each continent/year combination
data <- gapminder %>%
group_by(year,continent) %>%
summarise(medianLifeExp = median(lifeExp),
maxFdpCap = max(gdpPercap))
View(data)
install.packages("dplyr")
View(data)
nrow(gapminder)
gapminder
## 2.3: Look at the gapminder dataset
gapminder
## 2.2: Load the gapminder package
library(gapminder)
## 2.3: Look at the gapminder dataset
gapminder
nrow(gapminder)
ncol(gapminder)
dim(gapminder)
load('dplyr')
?load
?summarise
?summarize()
?summarise.dplyr
getwd()
setwd("C:/Users/Tamer Gad/Documents")
setwd("C:/Users/Tamer Gad/OneDrive/Desktop/Data-visualization-using-ggplot2-and-dplyr-in-R")
dir
getwd()
library(gapminder)
library(dplyr)
library(ggplot2)
## 1.2: Look at the gapminder dataset
gapminder
## 1.3: Create a subset of gapminder data set.
## Create gapminder_1957
gapminder_1957 %>%
filter(year == 1957)
## 1.3: Create a subset of gapminder data set.
## Create gapminder_1957
gapminder_1957 <- gapminder %>%
filter(year == 1957)
gapminder_1957
## 2.1: Plot a scatterplot pop on the x-axis and lifeExp on the y-axis
ggplot(gapminder_1957,aes(x = pop, y = lifeExp)) +
geom_point()
library(ggplot2)
## 1.1: Load the required packages
install.packages("ggplot2")
library(ggplot2)
gapminder_1957
## 2.1: Plot a scatterplot pop on the x-axis and lifeExp on the y-axis
ggplot(gapminder_1957,aes(x = pop, y = lifeExp)) +
geom_point()
## 2.2: Change to put pop on the x-axis and gdpPercap on the y-axis
ggplot(gapminder_1957,aes(x = pop, y = gdppercap)) +
geom_point()
## 2.2: Change to put pop on the x-axis and gdpPercap on the y-axis
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap)) +
geom_point()
## 2.3 (Ex.): Create a scatter plot with gdpPercap on the x-axis
## and lifeExp on the y-axis
ggplot(gapminder_1957, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
?geom_point()
p + geom_point()
p <- ggplot(mtcars, aes(wt, mpg))
p + geom_point()
p + geom_point(aes(colour = factor(cyl)))
p + geom_point(aes(shape = factor(cyl)))
## 2.3 (Ex.): Create a scatter plot with gdpPercap on the x-axis
## and lifeExp on the y-axis
ggplot(gapminder_1957, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
## 2.4: Change this plot to put the x-axis on a log scale
ggplot(gapminder_1957,aes(x = pop, y = lifeExp)) +
geom_point() +
scale_x_log10()
## 2.5 (Ex.): Scatter plot comparing pop and gdpPercap,
## with both axes on a log scale
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap)) +
geom_point()
## 2.5 (Ex.): Scatter plot comparing pop and gdpPercap,
## with both axes on a log scale
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap)) +
geom_point() +
scale_x_log10()
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap)) +
geom_point()
gapminder_1957
## 2.5 (Ex.): Scatter plot comparing pop and gdpPercap,
## with both axes on a log scale
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap)) +
geom_point() +
scale_x_log10()
## 2.5 (Ex.): Scatter plot comparing pop and gdpPercap,
## with both axes on a log scale
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
## 3.1: Scatter plot comparing pop and lifeExp,
## with color representing continent
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap, color = continent)) +
geom_point() +
scale_x_log10()
## 3.1: Scatter plot comparing pop and lifeExp,
## with color representing continent
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap, color = continent)) +
geom_point() +
scale_x_log10()
ggplot(gapminder_1957,aes(x = pop, y = gdpPercap, color = continent)) +
geom_point() +
scale_x_log10()
## 3.1: Scatter plot comparing pop and lifeExp,
## with color representing continent
ggplot(gapminder_1957,aes(x = pop, y = lifeExp, color = continent)) +
geom_point() +
scale_x_log10()
## Size Aesthetics
## 3.2: Add the size aesthetic to represent a country's gdpPercap
ggplot(gapminder_1957,aes(x = pop, y = lifeExp,
color = continent, size = gdpPercap)) +
geom_point() +
scale_x_log10()
## 4.1: Scatter plot comparing pop and lifeExp, faceted by continent
ggplot(gapminder_1957, aes(x = pop, y = lifeExp)) +
geom_point() +
scale_x_log10()
## 4.1: Scatter plot comparing pop and lifeExp, faceted by continent
ggplot(gapminder_1957, aes(x = pop, y = lifeExp)) +
geom_point() +
scale_x_log10() +
facet_wrap(continent_colors)
## 4.1: Scatter plot comparing pop and lifeExp, faceted by continent
ggplot(gapminder_1957, aes(x = pop, y = lifeExp)) +
geom_point() +
scale_x_log10() +
facet_wrap(continent_colors)
## 4.1: Scatter plot comparing pop and lifeExp, faceted by continent
ggplot(gapminder_1957, aes(x = pop, y = lifeExp)) +
geom_point() +
scale_x_log10() +
facet_wrap(continent)
## 4.1: Scatter plot comparing pop and lifeExp, faceted by continent
ggplot(gapminder_1957, aes(x = pop, y = lifeExp)) +
geom_point() +
scale_x_log10() +
facet_wrap(~continent)
## 4.2: Scatter plot comparing gdpPercap and lifeExp, with color
## representing continent and size representing population, faceted by year
ggplot(gapminder_1957, aes(x = gdpPercap , y = lifeExp,
color = continent, size = pop)) +
geom_point() +
scale_x_log10() +
facet_wrap(~year)
## 4.2: Scatter plot comparing gdpPercap and lifeExp, with color
## representing continent and size representing population, faceted by year
ggplot(gapminder, aes(x = gdpPercap , y = lifeExp,
color = continent, size = pop)) +
geom_point() +
scale_x_log10() +
facet_wrap(~year)
## 5.1: Create a variable by_year that gets the median life expectancy
## for each year
by_year <- gampminder %>%
group_by(year) %>%
summarise(medianlifeExp = median(lifeExp))
## 5.1: Create a variable by_year that gets the median life expectancy
## for each year
by_year <- gapminder %>%
group_by(year) %>%
summarise(medianlifeExp = median(lifeExp))
by_year
## 5.2: Create a scatter plot showing the change in medianLifeExp over time
ggplot(by_year, aes(x = year, y = medianlifeExp)) +
geom_point()
## 5.2: Create a scatter plot showing the change in medianLifeExp over time
ggplot(by_year, aes(x = year, y = medianlifeExp)) +
geom_point() +
expand_limits(y = 0)
by_year_continent <- gapminder %>%
group_by(year, continent) %>%
summarize(medianGdpPercap = median(gdpPercap))
by_year_continent
## 5.4: Plot the change in medianGdpPercap in each continent over time
ggplot(by_year_continent, aes(x = year, y = medianGdpPercap
color = continent)) +
geom_point() +
expand_limits(y = 0)
## 5.4: Plot the change in medianGdpPercap in each continent over time
ggplot(by_year_continent, aes(x = year, y = medianGdpPercap,
color = continent)) +
geom_point() +
expand_limits(y = 0)
## 5.5: Summarize the median GDP and median life expectancy
## per continent in 2007
by_continent_2007 <- gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarize(medianLifeExp = median(lifeExp),
medianGdpPercap = median(gdpPercap))
gapminder_1957
by_continent_2007
## 5.6: Use a scatter plot to compare the median GDP
## and median life expectancy
ggplot(by_continent_2007, aes(x = gdpPercap, y = medianLifeExp,
color = continent)) +
geom_point() +
expand_limits(y=0)
## 5.5: Summarize the median GDP and median life expectancy
## per continent in 2007
by_continent_2007 <- gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarize(medianLifeExp = median(lifeExp),
medianGdpPercap = median(gdpPercap))
## 5.6: Use a scatter plot to compare the median GDP
## and median life expectancy
ggplot(by_continent_2007, aes(x = gdpPercap, y = medianLifeExp,
color = continent)) +
geom_point() +
expand_limits(y=0)
## 5.6: Use a scatter plot to compare the median GDP
## and median life expectancy
ggplot(by_continent_2007, aes(x = medianGdpPercap , y = medianLifeExp,
color = continent)) +
geom_point() +
expand_limits(y=0)
## 6.1: Summarize the median gdpPercap by year,
## then save it as by_year
by_year <- gapminder %>%
group_by(year) %>%
summarize(medianGdpPercap = median(gdpPercap))
## 6.2: Create a line plot showing the change in medianGdpPercap over time
ggplot(by_year, aes(x = year, y = medianGdpPercap )) +
geom_line() +
expand_limits(y = 0)
## 6.3: Summarize the median gdpPercap by year & continent,
## save as by_year_continent
by_year_continent <- gapminder %>%
group_by(year, continent) %>%
summarize(medianGdpPercap = median(gdpPercap))
by_year_continent
ggplot(by_year, aes(x = continent, y = medianGdpPercap )) +
geom_line() +
expand_limits(y = 0)
ggplot(by_year, aes(x = continent, y = medianGdpPercap )) +
geom_line() +
expand_limits(y = 0)
ggplot(by_year_continent, aes(x = continent, y = medianGdpPercap )) +
geom_line() +
expand_limits(y = 0)
ggplot(by_year_continent, aes(x = year, y = medianGdpPercap )) +
geom_line() +
expand_limits(y = 0)
ggplot(by_year_continent, aes(x = year, y = medianGdpPercap,
color = continent)) +
geom_line() +
expand_limits(y = 0)
## 7.1: Summarize the median gdpPercap by continent in 1957
by_continent <- gapminder %>%
filter(year == 1957) %>%
group_by(continent) %>%
summarize(medianGdpPercap = median(gdpPercap))
## 7.2: Create a bar plot showing medianGdp by continent
ggplot(by_continent, aes(x = continent, y = medianGdpPercap )) +
geom_bar()
## 7.1: Summarize the median gdpPercap by continent in 1957
by_continent <- gapminder %>%
filter(year == 1957) %>%
group_by(continent) %>%
summarize(medianGdpPercap = median(gdpPercap))
## 7.2: Create a bar plot showing medianGdp by continent
ggplot(by_continent, aes(x = continent, y = medianGdpPercap )) +
geom_bar()
by_continent
## 7.2: Create a bar plot showing medianGdp by continent
ggplot(by_continent, aes(x = continent, y = medianGdpPercap )) +
geom_col()
## 7.3: Visualizing GDP per capita by country in Oceania
## Filter for observations in the Oceania continent in 1957
oceania_1957 <- gapminder %>%
filter(continent == "Oceania", year == 1957)
oceania_1957
## 7.4: Create a bar plot of gdpPercap by country
ggplot(oceania_1957, aes(x = country, y = gdpPercap )) +
geom_col()
## 8.1: Filter the dataset for the year 1957. Create a new column called
## pop_by_mil. Save this in a new variable called gapminder_1957
gapminder_1957 <- gapminder %>%
filter(year = 1957) %>%
mutate(pop_my_mil = pop/1000000)
## 8.1: Filter the dataset for the year 1957. Create a new column called
## pop_by_mil. Save this in a new variable called gapminder_1957
gapminder_1957 <- gapminder %>%
filter(year == 1957) %>%
mutate(pop_my_mil = pop/1000000)
gapminder_1957
## 8.2: Create a histogram of population (pop_by_mil)
ggplot(gapminder_1957, aes(x = pop_my_mil)) +
geom_histogram()
## 8.2: Create a histogram of population (pop_by_mil)
ggplot(gapminder_1957, aes(x = pop_my_mil)) +
geom_histogram(bin = 50)
## 8.2: Create a histogram of population (pop_by_mil)
ggplot(gapminder_1957, aes(x = pop_my_mil)) +
geom_histogram(bins = 50)
gapminder_1957 <- gapminder %>%
filter(year == 1957)
## 8.4: Create a histogram of population (pop), with x on a log scale
ggplot(gapminder_1957, aes(x = pop)) +
geom_histogram() +
scale_x_log10()
## 9.1: Create the gapminder_1957 and filter for the year 1957 only
gapminder_1957 <- gapminder %>%
filter(year == 1957)
## 9.2: Create a boxplot comparing gdpPercap among continents
ggplot(gapminder_1957, aes(x = continent, y = gdpPercap)) +
geom_boxplot()
## 9.2: Create a boxplot comparing gdpPercap among continents
ggplot(gapminder_1957, aes(x = continent, y = gdpPercap)) +
geom_boxplot() +
scale_y_log10()
## 9.3: Add a title to this graph:
## "Comparing GDP per capita across continents"
ggplot(gapminder_1957, aes(x = continent, y = gdpPercap)) +
geom_boxplot() +
scale_y_log10() +
ggtitle("Comparing GDP Per Capita across Continents")
dim(gapminder)
